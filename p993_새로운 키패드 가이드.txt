키패드
L(left) R(right) U(up) D(down) S(space) Z(z)으로 분류된다.


L : 육성 버튼
R : 컨트롤 버튼
D : 친구 버튼이 활성화 되어 있을 경우에만 D으로 선택 가능해진다.
------------------------------------------------------------
L_UorD : 육성 버튼 조정 
L_UorD_S : 육성 버튼 선택 
L_UorD_S_LorR : 육성 옵션 조정
	음식 : 먹일 음식 골라서 먹일 수 있음
L_UorD_S_LorR_S : 옵션 선택해서 적용
	
 > 이 과정 중에서 Z를 누르면 언제든지 전 단계로 돌아간다.
------------------------------------------------------------
R_UorD : 컨트롤 버튼 조정
R_UorD_S : 컨트롤 버튼 선택

R_UorD_S(나가기)_LorR : 나갈지 있을지 여부 선택 가능
R_UorD_S(환경설정)_?? : 환경설정 가능
R_UorD_S(아이템)_LorRorUorD : 아이템 지정 가능
R_UorD_S(업적)_UorD : 업적 확인 및 보상 받기 가능
R_UorD_S(미니게임)_LorR : 미니게임 선택 가능
R_UorD_S(인테리어)_LorR : 인테리어 지정 가능

 > 이 과정 중에서 Z를 누르면 언제든지 전 단계로 돌아간다.
------------------------------------------------------------
D_S_UorD :  연동할 친구 선택

------------------------------------------------------------

그냥 처음에 표기하는 것들을 두고
뒤에 키 입력을 받는 것을 둔다.
이제 메뉴 수행판을 (selected 방식으로 바꾼다. space 입력되면 수행하는 식으로,,)

그리고 각 기능별 세부 기능(업적, 아이템 등,,)은 별도로 함수로 만든다.

check_level : 1~4 에 따라 s를 눌렀을 경우에 뒤로 가기에 도움을 준다. (매 번 계산하기는 
 1 :  Mode_case / 2 : Main_case 과 Sub_case / 3 : Sel_case(선택 수준) / 4 : 함수 본격 동작 중

Mode_case : 1 (일반적인 경우) / 2 (미니게임)

Main_case : 0 (아무것도 표기 안함) / 1 (육성 - 처음에는 펼치기 포함) / 2 (컨트롤 - 처음에는 펼치기 포함)
	   3 (친구)
Sub_case : 0 (메인케이스의 기본만 표기) / -1 (처음 펼치는 단계) / 1~? : 해당 항목을 selected로 만든다.

Sel_case : 0 (아직 선택되지 않은 상태) / 1~? : 해당 항목을 selected로 만든다.
	(아이템 선택 용도로 사용된다 / 현재 있는 아이템의 종류에 따라 가능한 범위가 다르겠지...)

Sel_item : item은 2차원이므로 

(Sel_key로 작동한다)
 우(1) 좌(2) 상(3) 하(4) A(5) S(6)


ctrl = 0


friend = 0


글씨체로는...
'arial' / '휴먼고딕' / '휴먼명조' 를 우선 쓰자..

fontObj = pygame.font.SysFont('arial',20)
textSurfaceObj = fontObj.render('Face Recognition', True, (0,0,0))
textRectObj = textSurfaceObj.get_rect();
textRectObj = (36, 36, 0, 0)
screen.blit(textSurfaceObj, textRectObj)
    
-----------------------------------------------------------
#space키 처리 방법
keys = pygame.key.get_pressed()
if keys[pygame.K_SPACE]:
	print("스페이스 키 눌렀음")


if inkey == K_BACKSPACE: